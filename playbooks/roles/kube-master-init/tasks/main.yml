#- name: initialize the cluster
#  command: kubeadm init --pod-network-cidr={{ network_prefix }}.0/24 --apiserver-advertise-address={{ master_node }}
#  args:
#    creates: /root/cluster_initialized.txt
#  register: kubeadm_init_raw
- name: create an empty file for kubeadm-config
  copy:
    content: ""
    dest: /etc/kubernetes/kubeadm-config.yaml
    force: no


- name: configuring the container runtime including its cgroup driver
  blockinfile:
    path: /etc/kubernetes/kubeadm-config.yaml
    block: |
         kind: ClusterConfiguration
         apiVersion: kubeadm.k8s.io/v1beta3
         networking:
           podSubnet: "10.244.0.0/16"
         ---
         kind: KubeletConfiguration
         apiVersion: kubelet.config.k8s.io/v1beta1
         runtimeRequestTimeout: "15m"
         cgroupDriver: "systemd"
         systemReserved:
           cpu: 100m
           memory: 350M
         kubeReserved:
           cpu: 100m
           memory: 50M
         enforceNodeAllocatable:
         - pods

- name: initialize the cluster (this could take some time)
  shell: kubeadm init --config /etc/kubernetes/kubeadm-config.yaml
  args: 
    creates: /root/cluster_initialized.txt
  register: kubeadm_init_raw

#- name: install calico operator
#  command: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/tigera-operator.yaml
#
#- name: install calico custom resources
#  command: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/custom-resources.yaml
#
- name: save kubeadm init output to a file
  copy:
    content: "stdout:\n{{ kubeadm_init_raw.stdout }}\n\nstderr:\n{{ kubeadm_init_raw.stderr }}"
    dest: /root/cluster_initialized.txt
  when: kubeadm_init_raw.changed

- name: create .kube directory
  file:
    path: /root/.kube
    state: directory
    mode: 0755
    owner: root
    group: root

- name: copy admin.conf to root's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes

- name: Download kube-flannel to the cluster.
  ansible.builtin.get_url:
    url: https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
    dest: ~/kube-flannel.yaml
    mode: '0664'

- name: Apply kube-flannel  to the cluster.
  kubernetes.core.k8s:
    state: present
    src: ~/kube-flannel.yaml


